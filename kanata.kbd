#|
    https://shom.dev/start/using-kanata-to-remap-any-keyboard/

A more detailed and less terse configuration guide is found here:

    https://github.com/jtroo/kanata/blob/main/docs/config.adoc

Other configuration samples are found here:

    https://github.com/jtroo/kanata/tree/main/cfg_samples

Pressing and holding all of the three following keys together at the same
time will cause kanata to exit:

  Left Control, Space, Escape

This is for the physical key input rather than after any remappings
that are done by kanata.
|#


(defcfg

  ;; Enable processing of keys that are not in defsrc.
  ;; This is useful if you are only mapping a few keys in defsrc instead of
  ;; most of the keys on your keyboard. Without this, the tap-hold-release and
  ;; tap-hold-press actions will not activate for keys that are not in defsrc.
  process-unmapped-keys no

  ;; Disable all keys not mapped in defsrc.
  ;; Only works if process-unmapped-keys is also yes.
  ;; block-unmapped-keys yes

  ;; This config entry alters the behavior of movemouse-accel actions.
  ;; By default, this setting is disabled - vertical and horizontal
  ;; acceleration are independent. Enabling this setting will emulate QMK mouse
  ;; move acceleration behavior, i.e. the acceleration state of new mouse
  ;; movement actions are inherited if others are already being pressed.
  movemouse-inherit-accel-state yes

  ;; This config entry alters the behavior of movemouseaccel actions.
  ;; This makes diagonal movements simultaneous to mitigate choppiness in
  ;; drawing apps, if you're using kanata mouse movements to draw for
  ;; whatever reason.
  movemouse-smooth-diagonals yes

  ;; This configuration makes multiple tap-hold actions that are activated near
  ;; in time expire their timeout quicker. Without this, the timeout for the 2nd
  ;; tap-hold onwards will start from 0ms after the previous tap-hold expires.
  concurrent-tap-hold yes

  ;; This configuration makes the release of one-shot-press and of the tap in a tap-hold
  ;; by the defined number of milliseconds (approximate).
  ;; The default value is 5.
  ;; While the release is delayed, further processing of inputs is also paused.
  ;; This means that there will be a minor input latency impact in the mentioned scenarios.
  ;; The reason for this configuration existing is that some environments
  ;; do not process the scenarios correctly due to the rapidity of the release.
  ;; Kanata does send the events in the correct order,
  ;; so the fault is more in the environment, but kanata provides a workaround anyway.
  rapid-event-delay 5

  ;; This setting defaults to yes but can be configured to no to save on
  ;; logging. However, if --log-layer-changes is passed as a command line
  ;; argument, a "no" in the configuration file will be overridden and layer
  ;; changes will be logged.
  ;;
  ;; log-layer-changes no

  ;; This configuration will press and then immediately release the non-modifier key
  ;; as soon as the override activates, meaning you are unlikely as a human to ever
  ;; release modifiers first, which can result in unintended behaviour.
  ;;
  ;; The downside of this configuration is that the non-modifier key
  ;; does not remain held which is important to consider for your use cases.
  override-release-on-activation yes
)

;; ⏹ 166 It does not seem to be working.
(deflocalkeys-win
  ⏹ 166
)

(deflocalkeys-wintercept
  ⏹ 166
)

(deflocalkeys-winiov2
  ⏹ 166
)

(deflocalkeys-linux
  ⏹ 166
)

;; Only one defsrc is allowed.
;;
;; defsrc defines the keys that will be intercepted by kanata. The order of the
;; keys matches the deflayer declarations and all deflayer declarations must
;; have the same number of keys as defsrc.
;;
;; If you are looking for other keys, the file src/keys/mod.rs should hopefully
;; provide some insight.
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt prtsc rmet rctl
)

;; The first layer defined is the layer that will be active by default when
;; kanata starts up.
(deflayer qwerty-miryoku-ppoi
  @grva 1    2    3    4    5    6    7    8     9      0    -     =     bspc
  @tab  q    w    e    r    t    y    u    i     o      p    [     ]     \
  bspc  @a   @s   @d   @f   g    h   @j    @k    @l     @;   '     @ret
  lsft  z    x    c    v    b    n    m    ,     .      /    rsft
  lctl  lmet @lalt          @spcnav        @ralt @prtsc rmet rctl
)

(deflayer qwerty
  @grvb 1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab   q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps  a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft  z    x    c    v    b    n    m    ,    .    /    rsft
  lctl  lmet lalt           spc            ralt _    rmet rctl
)

;; The colemak layer remaps the keys to the colemak layout. With tap-hold
;; aliases configured.
(deflayer colemak-miryoku-ppoi
  @grvb 1    2    3    4    5    6    7    8     9      0    -    =    bspc
  @tab  _    _    f    p    g    j    l    u     y      ;    [    ]    \
  bspc  @a   @r   @s1  @t   d    _    @n   @e    @i     @o   '    @ret
  lsft  _    _    _    _    _    k    _    ,     .      /    rsft
  lctl  lmet @lalt          @spcnav        @ralt @prtsc rmet rctl
)

;; The colemak layer remaps the keys to the colemak layout. Without tap-hold
;; aliases configured.
(deflayer colemak
  @grva 1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab   _    _    f    p    g    j    l    u    y    ;    [    ]    \
  bspc  _    r    s    t    d    _    n    e    i    o    '    ret
  lsft  _    _    _    _    _    k    _    ,    .    /    rsft
  lctl  lmet lalt           spc            ralt _    rmet rctl
)

(deffakekeys
  fk-qwerty XX
  fk-colemak XX
)
(defalias
  ;; aliases to change the base layer to qwerty or colemak
  stqwrp (layer-switch qwerty-miryoku-ppoi)
  stqwr (layer-switch qwerty)
  stclkp (layer-switch colemak-miryoku-ppoi)
  stclk (layer-switch colemak)

  switch-to-qwerty-miryoku-ppoi (multi
    (on-press-fakekey fk-qwerty press)
    (on-press-fakekey fk-colemak release)
    (layer-switch qwerty-miryoku-ppoi))

  switch-to-colemak-ppoi (multi
    (on-press-fakekey fk-colemak press)
    (on-press-fakekey fk-qwerty release)
    (layer-switch colemak))

  to-base-action (switch 
    ((input virtual fk-qwerty)) @stqwrp break
    ((input virtual fk-colemak)) @stclkp break
    () @stqwrp break)

  to-extra-action @stqwr

  to-tap-action (switch
    ((input virtual fk-qwerty)) @stqwr break
    ((input virtual fk-colemak)) @stclk break
    () @stqwr break)

  lock-current-action (switch
    ((layer navigation)) (layer-switch navigation) break
    ((layer mouse)) (layer-switch mouse) break
    ((layer media)) (layer-switch media) break
    ((layer numbers)) (layer-switch numbers) break
    ((layer symbols)) (layer-switch symbols) break
    ((layer functionkeys)) (layer-switch functionkeys) break
    () @stqwrp break)

  to-opposite-action (switch
    ((layer navigation)) (layer-switch numbers) break
    ((layer mouse)) (layer-switch symbols) break
    ((layer media)) (layer-switch functionkeys) break
    ((layer numbers)) (layer-switch navigation) break
    ((layer symbols)) (layer-switch mouse) break
    ((layer functionkeys)) (layer-switch media) break
    () @stqwrp break)

  tbase (tap-dance 200 (XX @to-base-action))
  textra (tap-dance 200 (XX @to-base-action))
  ttap (tap-dance 200 (XX @to-tap-action))
  lcur (tap-dance 200 (XX @lock-current-action))
  topp (tap-dance 200 (XX @to-opposite-action))
)

(defvar
  tap-repress-timeout 200
  hold-timeout 200
  tt $tap-repress-timeout
  ht $hold-timeout
)

;; defalias is used to declare a shortcut for a more complicated action to keep
;; the deflayer declarations clean and aligned. The alignment in deflayers is not
;; necessary, but is strongly recommended for ease of understanding visually.
;;
;; Aliases are referred to by `@<alias_name>`. Aliases can refer to each other,
;; e.g. in the `anm` alias. However, an alias can only refer to another alias
;; that has been defined before it in the file.
(defalias
  wh-lswa (layer-while-held layers-switcher-a)
  wh-lswb (layer-while-held layers-switcher-b)
  wh-navigation (layer-while-held navigation)
  wh-mse (layer-while-held mouse)
  wh-media (layer-while-held media)
  wh-numbers (layer-while-held numbers)
  wh-sym (layer-while-held symbols)
  wh-functionkeys (layer-while-held functionkeys)

  grl  (tap-hold 200 200 grv @wh-lswa)
  grva (tap-hold-press 200 200 grv @wh-lswa)
  grvb (tap-hold-press 200 200 grv @wh-lswb)

  tab (tap-hold-release $tt $ht tab @wh-mse)
  a   (tap-hold-release $tt $ht a   lmet)
  s   (tap-hold-release $tt $ht s   lalt)
  d   (tap-hold-release $tt $ht d   lctl)
  f   (tap-hold-release $tt $ht f   lsft)
  j   (tap-hold-release $tt $ht j   rsft)
  k   (tap-hold-release $tt $ht k   rctl)
  l   (tap-hold-release $tt $ht l   ralt)
  ;   (tap-hold-release $tt $ht ;   rmet)
  ret (tap-hold-release $tt $ht ret @wh-sym)

  r   (tap-hold-release $tt $ht r   lalt)
  s1  (tap-hold-release $tt $ht s   lctl)
  t   (tap-hold-release $tt $ht t   lsft)
  n   (tap-hold-release $tt $ht n   rsft)
  e   (tap-hold-release $tt $ht e   rctl)
  i   (tap-hold-release $tt $ht i   ralt)
  o   (tap-hold-release $tt $ht o   rmet)

  lalt  (tap-hold-release $tt $ht esc @wh-media)
  spcnav (tap-hold-release $tt $ht spc @wh-navigation)
  ralt  (tap-hold-release $tt $ht bspc @wh-numbers)
  prtsc  (tap-hold-release $tt $ht del @wh-functionkeys)
)

;; The underscore _ means transparent. The key on the base layer will be used
;; instead. XX means no-op. The key will do nothing.
(deflayer numbers
  _    _    _    _    _    _    _    _      _       _     _    _    _    _
  -    [    7    8    9    ]    XX   @tbase @textra @ttap XX   XX   XX   XX
  bspc ;    4    5    6    =    XX   rsft   rctl    ralt  rmet XX  ret
  _    `    1    2    3    \    XX   @lcur  @topp   ralt  XX   _
  _    _    .              0                XX      XX    XX   _
)

(deflayer symbols
  _    _    _     _    _    _   _    _      _       _     _    _   _   _
  S--  {    S-7   S-8  S-9  }   XX   @tbase @textra @ttap XX   XX  XX  XX
  bspc S-;  S-4   S-5  S-6  +   XX   rsft   rctl    ralt  rmet XX  ret
  _    S-`  S-1   S-2  S-3  S-\ XX   @lcur  @topp   ralt  XX   _
  _    _    S-9             S-0             XX      XX    XX   _
)

(deflayer functionkeys
  _    _    _    _    _    _     _   _      _       _     _    _   _   _
  tab  f12  f7   f8   f9   ssrq  XX  @tbase @textra @ttap XX   XX  XX  XX
  bspc f11  f4   f5   f6   slck  XX  rsft   rctl    ralt  rmet XX  ret
  _    f10  f1   f2   f3   pause XX  @lcur  @topp   ralt  XX   _
  _    _    menu           spc              XX      XX    XX   _
)

;; The `lrld` action stands for "live reload".
;; The variants `lrpv` and `lrnx` will cycle between multiple configuration files
;; if they are specified in the startup arguments.
;; The list action variant `lrld-num` takes a number parameter and
;; reloads the configuration file specified by the number, according to the
;; order passed into the arguments on kanata startup.
(deflayer layers-switcher-a
  _    @stqwr @stclkp _    _    lrld lrpv lrnx (lrld-num 1) _ _    _    _    _
  _    _      _       _    _    _    _    _    _    _    _    _    _    _
  _    _      _       _    _    _    _    _    _    _    _    _    _
  _    _      _       _    _    _    _    _    _    _    _    _
  _    _      _                 _              _    _    _    _
)
(deflayer layers-switcher-b
  _    @stqwrp @stclk _    _    lrld lrpv lrnx (lrld-num 1) _ _    _    _    _
  _    _       _      _    _    _    _    _    _    _    _    _    _    _
  _    _       _      _    _    _    _    _    _    _    _    _    _
  _    _       _      _    _    _    _    _    _    _    _    _
  _    _       _                _              _    _    _    _
)

(defalias redo (multi C-y))
(defalias copy (multi C-c))
(defalias paste (multi C-v))
(defalias cut (multi C-x))
(defalias undo (multi C-z))

(deflayer navigation
  _    _    _     _       _      _    _     _      _     _    _     _    _    _
  tab  XX   @ttap @textra @tbase XX   @redo @paste @copy @cut @undo XX   XX   XX
  bspc lmet lalt  lctl    lsft   XX   caps  left   down  up   rght  XX   ret
  _    XX   ralt  @topp   @lcur  XX   ins   home   pgdn  pgup end   _
  _    _    XX                   XX                bspc  del  _     _
)

(deflayer mouse
  _    _    _     _       _      _    _     @ms←   @ms↓  @ms↑ @ms→  _    _    _
  tab  XX   @ttap @textra @tbase XX   @redo @paste @copy @cut @undo XX   XX   XX
  bspc lmet lalt  lctl    lsft   XX   mbck  @ma←   @ma↓  @ma↑ @ma→  mfwd   ret
  _    @fms ralt  @topp   @lcur  XX   mmid  @mwl   @mwd  @mwu @mwr  _
  _    _    XX                   mlft              mrgt  mmid _     _
)

(deflayer media
  _    _     _     _       _      _    _   _     _     _    _    _    _    _
  _    XX    @ttap @textra @tbase XX   XX  XX    XX    XX   XX   XX   XX   XX
  bspc lmet  lalt  lctl    lsft   XX   XX  ◀◀   🔉   🔊   ▶▶  XX   ⏹
  _    XX    ralt  @topp   @lcur  XX   XX  XX    XX    XX   XX   XX
  _    _     XX                   XX             ▶⏸  🔇   _    _
)

(defalias
  ;; Mouse wheel actions. The first number is the interval in milliseconds
  ;; between scroll actions. The second number is the distance in some arbitrary
  ;; unit. Play with the parameters to see what feels correct. Both numbers
  ;; must be in the range 1-65535
  ;;
  ;; In both Windows and Linux, 120 distance units is equivalent to a single
  ;; notch movement on a physical wheel. In Linux, not all desktop environments
  ;; support the REL_WHEEL_HI_RES event so if you experience issues with `mwheel`
  ;; actions in Linux, using a distance value that is multiple of 120 may help.
  mwu (mwheel-up 50 120)
  mwd (mwheel-down 50 120)

  ;; Horizontal mouse wheel actions. Similar story to vertical mouse wheel.
  mwl (mwheel-left 50 120)
  mwr (mwheel-right 50 120)

  ;; Mouse movement actions.The first number is the interval in milliseconds
  ;; between mouse actions. The second number is the distance traveled per interval
  ;; in pixels.

  ms↑ (movemouse-up 1 1)
  ms← (movemouse-left 1 1)
  ms↓ (movemouse-down 1 1)
  ms→ (movemouse-right 1 1)

  ;; Mouse movement actions with linear acceleration. The first number is the
  ;; interval in milliseconds between mouse actions. The second number is the time
  ;; in milliseconds for the distance to linearly ramp up from the minimum distance
  ;; to the maximum distance. The third number is the minimum distance traveled
  ;; per interval in pixels. The fourth number is the maximum distance traveled
  ;; per interval in pixels.

  ma↑ (movemouse-accel-up 1 1000 1 5)
  ma← (movemouse-accel-left 1 1000 1 5)
  ma↓ (movemouse-accel-down 1 1000 1 5)
  ma→ (movemouse-accel-right 1 1000 1 5)

  ;; movemouse-speed takes a percentage by which it then scales all of the
  ;; mouse movements while held. You can have as many of these active at a
  ;; given time as you would like, but be warned that some values, such as 33
  ;; may not have correct pixel distance representations.
  fms (movemouse-speed 200)
)
